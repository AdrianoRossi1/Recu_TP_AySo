git push
git pull --rebase origin main
git push origin main
git push origin main --force
git push origin main
awk -F: -v u="$USER" '$1==u{print $5, $6}' /etc/passwd >> datos_usuario.txt
git add datos_usuario.txt
awk -F: -v u="$USER" '$1==u{print $5, $6}' /etc/passwd >> datos_usuario.txt
git add datos_usuario.txt
cd
mkdir -p repogit
cd repogit
cd TP_AySO
pwd
git status
echo "=$(whoami)" > datos_usuario.txt
echo "Administrator=$(whoami)" > datos_usuario.txt
awk -F: -v u="$(whoami)" '$1==u{print $5, $6}' /etc/passwd >> datos_usuario.txt
cat <<EOF >> README.md


Alumno: Adriano Rossi

División: 116

Turno: Mañana

EOF

git add README.md datos_usuario.txt
git commit -m "datos"
git push
mkdir -p ~/AySO/{Documentos,Practicas,Comandos,Scripts}
echo 'mkdir -p ~/AySO/{Documentos,Practicas,Comandos,Scripts}' > script_dir.sh
chmod +x script_dir.sh
git add script_dir.sh
git commit -m "script"
git push
history -a
cp ~/.bash_history ./Historial_comandos_TuApellido.txt
cp ~/.bash_history ./Historial_comandos_Rossi.txt
git add .
git commit -m "historial guardado"
git push
pwd
git status
git branch
git remote -v
git pull --rebase origin main
cat <<EOF >> README.md


Alumno: Adriano Rossi

División: 116

Turno: Mañana

EOF

git add README.md datos_usuario.txt
git commit -m "Adatos de usuario"
Administrator@KernelOS-PC MINGW64 ~/Desktop
$ awk -F: -v u="$USER" '$1==u{print $5, $6}' /etc/passwd >> datos_usuario.txt
awk: fatal: cannot open file `/etc/passwd' for reading (No such file or directory)

Administrator@KernelOS-PC MINGW64 ~/Desktop
$ git add datos_usuario.txt
fatal: not a git repository (or any of the parent directories): .git

Administrator@KernelOS-PC MINGW64 ~/Desktop
$ cd

Administrator@KernelOS-PC MINGW64 ~
$ mkdir -p repogit

Administrator@KernelOS-PC MINGW64 ~
$ cd repogit

Administrator@KernelOS-PC MINGW64 ~/repogit
$ cd TP_AySO

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ pwd
/c/Users/Administrator/repogit/TP_AySO

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git status
interactive rebase in progress; onto f0fdb56
Last command done (1 command done):
   pick 1e0e081 # DELETE: eliminando archivo README.md de prueba
Next command to do (1 remaining command):
   pick 4ca824f # 1er ejercicio datos_usuarios.txt
  (use "git rebase --edit-todo" to view and edit)
You are currently rebasing branch 'main' on 'f0fdb56'.
  (fix conflicts and then run "git rebase --continue")
  (use "git rebase --skip" to skip this patch)
  (use "git rebase --abort" to check out the original branch)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   datos_usuario.txt

Unmerged paths:
  (use "git restore --staged <file>..." to unstage)
  (use "git add/rm <file>..." as appropriate to mark resolution)
        deleted by them: README.md


Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ echo "=$(whoami)" > datos_usuario.txt

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ echo "Administrator=$(whoami)" > datos_usuario.txt

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ awk -F: -v u="$(whoami)" '$1==u{print $5, $6}' /etc/passwd >> datos_usuario.txt
awk: fatal: cannot open file `/etc/passwd' for reading (No such file or directory)

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ cat <<EOF >> README.md

Administrator@KernelOS-PC MINGW64 ~/Desktop
$ awk -F: -v u="$USER" '$1==u{print $5, $6}' /etc/passwd >> datos_usuario.txt
awk: fatal: cannot open file `/etc/passwd' for reading (No such file or directory)
Administrator@KernelOS-PC MINGW64 ~/Desktop
$ git add datos_usuario.txt
fatal: not a git repository (or any of the parent directories): .git
Administrator@KernelOS-PC MINGW64 ~/Desktop
$ cd
Administrator@KernelOS-PC MINGW64 ~
$ mkdir -p repogit
Administrator@KernelOS-PC MINGW64 ~
$ cd repogit
Administrator@KernelOS-PC MINGW64 ~/repogit
$ cd TP_AySO
Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ pwd
/c/Users/Administrator/repogit/TP_AySO
Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git status
interactive rebase in progress; onto f0fdb56
Last command done (1 command done):
   pick 1e0e081 # DELETE: eliminando archivo README.md de prueba
Next command to do (1 remaining command):
   pick 4ca824f # 1er ejercicio datos_usuarios.txt
  (use "git rebase --edit-todo" to view and edit)
You are currently rebasing branch 'main' on 'f0fdb56'.
  (fix conflicts and then run "git rebase --continue")
  (use "git rebase --skip" to skip this patch)
  (use "git rebase --abort" to check out the original branch)
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   datos_usuario.txt
Unmerged paths:
  (use "git restore --staged <file>..." to unstage)
  (use "git add/rm <file>..." as appropriate to mark resolution)
        deleted by them: README.md
Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ echo "=$(whoami)" > datos_usuario.txt
Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ echo "Administrator=$(whoami)" > datos_usuario.txt
Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ awk -F: -v u="$(whoami)" '$1==u{print $5, $6}' /etc/passwd >> datos_usuario.txt
awk: fatal: cannot open file `/etc/passwd' for reading (No such file or directory)

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ cat <<EOF >> README.md
>
> Alumno: Adriano Rossi
> División: 116
> Turno: Mañana
> EOF

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git add README.md datos_usuario.txt
warning: in the working copy of 'README.md', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'datos_usuario.txt', LF will be replaced by CRLF the next time Git touches it

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git commit -m "datos"
[detached HEAD 6d64b29] datos
 2 files changed, 9 insertions(+)
 create mode 100644 datos_usuario.txt

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git push

fatal: You are not currently on a branch.
To push the history leading to the current (detached HEAD)
state now, use

    git push origin HEAD:<name-of-remote-branch>


Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ mkdir -p ~/AySO/{Documentos,Practicas,Comandos,Scripts}


Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ echo 'mkdir -p ~/AySO/{Documentos,Practicas,Comandos,Scripts}' > script_dir.sh

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ chmod +x script_dir.sh

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git add script_dir.sh
warning: in the working copy of 'script_dir.sh', LF will be replaced by CRLF the next time Git touches it

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git commit -m "script"
[detached HEAD 2882636] script
 1 file changed, 1 insertion(+)
 create mode 100644 script_dir.sh

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git push

fatal: You are not currently on a branch.
To push the history leading to the current (detached HEAD)
state now, use

    git push origin HEAD:<name-of-remote-branch>


Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ history -a

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ cp ~/.bash_history ./Historial_comandos_TuApellido.txt

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ cp ~/.bash_history ./Historial_comandos_Rossi.txt

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git add .
warning: in the working copy of 'Historial_comandos_Rossi.txt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Historial_comandos_TuApellido.txt', LF will be replaced by CRLF the next time Git touches it

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git commit -m "historial guardado"
[detached HEAD 144c6bd] historial guardado
 2 files changed, 286 insertions(+)
 create mode 100644 Historial_comandos_Rossi.txt
 create mode 100644 Historial_comandos_TuApellido.txt

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git push
fatal: You are not currently on a branch.
To push the history leading to the current (detached HEAD)
state now, use

    git push origin HEAD:<name-of-remote-branch>


Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ pwd
/c/Users/Administrator/repogit/TP_AySO

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git status
interactive rebase in progress; onto f0fdb56
Last command done (1 command done):
   pick 1e0e081 # DELETE: eliminando archivo README.md de prueba
Next command to do (1 remaining command):
   pick 4ca824f # 1er ejercicio datos_usuarios.txt
  (use "git rebase --edit-todo" to view and edit)
You are currently editing a commit while rebasing branch 'main' on 'f0fdb56'.
  (use "git commit --amend" to amend the current commit)
  (use "git rebase --continue" once you are satisfied with your changes)

nothing to commit, working tree clean

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git branch
* (no branch, rebasing main)
  main

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git remote -v
origin  git@github.com:AdrianoRossi1/TP_Ayso.git (fetch)
origin  git@github.com:AdrianoRossi1/TP_Ayso.git (push)

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git pull --rebase origin main
From github.com:AdrianoRossi1/TP_Ayso
 * branch            main       -> FETCH_HEAD
fatal: It seems that there is already a rebase-merge directory, and
I wonder if you are in the middle of another rebase.  If that is the
case, please try
        git rebase (--continue | --abort | --skip)
If that is not the case, please
        rm -fr ".git/rebase-merge"
and run me again.  I am stopping in case you still have something
valuable there.


Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ cat <<EOF >> README.md
>
> Alumno: Adriano Rossi
> División: 116
> Turno: Mañana
> EOF

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git add README.md datos_usuario.txt
warning: in the working copy of 'README.md', LF will be replaced by CRLF the next time Git touches it

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git commit -m "Adatos de usuario"
[detached HEAD 7a4145f] Adatos de usuario
 1 file changed, 8 insertions(+)

Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$

git push

git status



git rebase --abort || true
CLEAR
FPS
PITO
git rebase --abort 2>/dev/null || true


cd ~/repogit/TP_AySO
git rebase --abort 2>/dev/null || true
( test -r /etc/mtab && grep -i sysfs /etc/mtab > datos_sys.txt ) || grep -i sysfs /proc/mounts > datos_sys.txt
Administrator@KernelOS-PC MINGW64 ~/Desktop
$ cd ~/repogit/TP_AySO
Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main|REBASE 1/2)
$ git rebase --abort 2>/dev/null || true
Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main)
$ ( test -r /etc/mtab && grep -i sysfs /etc/mtab > datos_sys.txt ) || grep -i sysfs /proc/mounts > datos_sys.txt
Administrator@KernelOS-PC MINGW64 ~/repogit/TP_AySO (main)
$
echo "Usuario=$(whoami)" > datos_usuario.txt
git add .
git commit -m "1er ejercicio datos_usuarios.txt"
git pull --rebase origin main
git push
if [ -r /etc/passwd ]; then if [ -r /etc/passwd ]; then   awk -F: -v u="$(whoami)" '$1==u{print $5, $6}' /etc/passwd >> datos_usuario.txt;  else   printf "%s %s\n" "$(whoami)" "$HOME" >> datos_usuario.txt;  fi; git add datos_usuario.txt;  git commit -m "información del Usuario";  git pull --rebase origin main;  git push; 
cd ~/repogit/TP_AySO
if [ -r /etc/passwd ]; then awk -F: -v u="$(whoami)" '$1==u{print $5, $6}' /etc/passwd >> datos_usuario.txt; else printf "%s %s\n" "$(whoami)" "$HOME" >> datos_usuario.txt; fi
git add datos_usuario.txt
git commit -m "información del Usuario"
git pull --rebase origin main
git push
cat datos_usuario.txt
cat <<EOF >> README.md


cat <<EOF >> README.md


cat <<EOF >> README.md


cat <<EOF >> README.md
Alumno: Adriano Rossi
División: 116
Turno: Mañana
EOF

git add README.md
git commit -m "Readme y datos de usuario"
git pull --rebase origin main
git push
cat README.md
mkdir -p ~/AySO/{Documentos,Practicas,Comandos,Scripts}
echo 'mkdir -p ~/AySO/{Documentos,Practicas,Comandos,Scripts}' > script_dir.sh
chmod +x script_dir.sh
git add script_dir.sh
git commit -m "script"
git pull --rebase origin main
git push
history -a 2>/dev/null || true
cp ~/.bash_history ./Historial_comandos_TuApellido.txt 2>/dev/null || echo "Historial no disponible en Git Bash" > Historial_comandos_TuApellido.txt
cp ~/.bash_history ./Historial_comandos_Rossi.txt 2>/dev/null || echo "Historial no disponible en Git Bash" > Historial_comandos_Rossi.txt
git add Historial_comandos_Rossi.txt
git commit -m "comandos de Rossi"
git pull --rebase origin main
git push
git ls-files
git pull --rebase origin main
git push
git branch backup-prehist
cd ~/repogit/TP_AySO
git rev-parse --is-inside-work-tree
git status
git checkout main
git pull --rebase origin main
git branch backup-prehist
git push -u origin backup-prehist
git checkout --orphan nueva_historia
git add -A
git commit -m "Entrega TP1"
git branch -D main
git branch -m main
git push -f origin main
git log --oneline --decorate --graph -5
clear
ssh -T git@github.com
ls -la ~/.ssh
ssh-keygen -t ed25519 -C "rossiadriano315@gmail.com"
ls -la ~/.ssh
cat ~/.ssh/id_ed25519.pub
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ed25519
ssh -T git@github.com
cat ~/.ssh/id_ed25519.pub
ssh -T git@github.com
git rebase --abort 2>/dev/null || true
test -r /etc/mtab && grep -i sysfs /etc/mtab > datos_sys.txt || grep -i sysfs /proc/mounts > datos_sys.txt
echo "Administrator=$(whoami)" > datos_usuario.txt
git add .
git commit -m "1er ejercicio datos_usuarios.txt"
git push
if [ -r /etc/passwd ]; then
if [ -r /etc/passwd ]; then   awk -F: -v u="$(whoami)" '$1==u{print $5, $6}' /etc/passwd >> datos_usuario.txt; else   printf "%s %s\n" "$(whoami)" "$HOME" >> datos_usuario.txt; fi
git add datos_usuario.txt
git commit -m "información del Usuario"
git push
cat <<EOF >> README.md
Alumno: Adriano Rossi
División: 116
Turno: Mañana
EOF

git add README.md datos_usuario.txt
git commit -m "agregue readme y datos de usuario"
git push
git remote add origin git@github.com:AdrianoRossi1/TP_AySO.git
cd ~/repogit/TP_AySO
cd ~
mkdir -p repogit
cd repogit
git clone git@github.com:AdrianoRossi1/TP_AySO.git
cd TP_AySO
ls
cat <<EOF >> README.md
Alumno: Adriano Rossi
División: 116
Turno: Mañana
EOF

git add README.md
git commit -m "README con datos del alumno"
git push -u origin main
mkdir -p ~/AySO/{Documentos,Practicas,Comandos,Scripts}
echo 'mkdir -p ~/AySO/{Documentos,Practicas,Comandos,Scripts}' > script_dir.sh
chmod +x script_dir.sh
git add script_dir.sh
git commit -m "ADD: Añadiendo script"
git pull --rebase origin main
git commit -m "Añadiendo script"
git pull --rebase origin main
git push
history -a 2>/dev/null || true
cp ~/.bash_history ./Historial_comandos_TuApellido.txt 2>/dev/null || echo "" > Historial_comandos_Rossi.txt
git add Historial_comandos_Rossi.txt
git commit -m "Historial de comandos de Rossi"
git restore Historial_comandos_TuApellido.txt 
git pull --rebase origin main
git push
cd ~/repogit/TP_AySO
cd ~/repogit/TP_AySO
git rm "Historial_comandos_TuApellido.txt"
git commit -m ""
git commit -m ".."
git push
mkdir -p ~/UTN-AySO && cd ~/UTN-AySO
cat > Vagrantfile <<'EOF'

Vagrant.configure("2") do |config|


cat > Vagrantfile <<'EOF'


mkdir -p ~/UTN-AySO && cd ~/UTN-AySO
Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/jammy64"
  config.vm.provider "virtualbox" do |vb|     vb.memory = 2048
    vb.cpus = 2
  end
  config.vm.synced_folder ".", "/vagrant", type: "virtualbox"
end
E0F
vagrant up
vagrant ssh
clear
git clone https://github.com/sofiasartori/UTN-FRA-SO-Examenes
git clone https://github.com/sofiasartori/UTN-FRA_SO_Examenes
cd UTN-FRA_SO_Examenes
./script_Precondicion.sh
source ~/.bashrc
git clone git@github.com:AdrianoRossi1/Recu_TP_AySo.git
cd Recu_TP_AySo
cat > README.md << 'EOF
cat > README.md << 'EOF
Alumno: Rossi, Adriano
Comision: 116
Turno: Mañana
EOF

cat > README.md << 'EOF'


cat > README.md << 'EOF'
# Recu_TP_AySO
**Alumno:** Apellido, Nombre  Comision: 116  
Turno: Mañana
EOF

git clone https://github.com/sofiasartori/UTN-FR_SO_Examenes
git clone https://github.com/sofiasartori/UTN-FRA_SO_Examenes
cd
rm -rf Recu_TP_AySo
git clone git@github.com:AdrianoRossi1/Recu_TP_AySo.git
cat > README.md << 'EOF'
 
Alumno: Rossi Adriano  
Comisión: 116
Turno: Mañana 
EOF

git add README.md
cd
cd Recu_TP_AySo
ls -a
git add README.md
echo "# Recu_TP_AySo" > README.md
cat > README.md << 'EOF'

Alumno: Rossi Adriano
Comisión: 116
Turno: Mañana
EOF

git add README.md
git commit -m "README agregado con datos"
git push
set -euo pipefail
sudo mkdir -p /Estructura_A/{dir1/{sub1,sub2,sub3},dir2/{sub1,sub2,sub3},dir3/{sub1,sub2,sub3}}
sudo mkdir -p /Estructura_A/{dir1/{sub1,sub2,sub3},dir2/{sub1,sub2,sub3},dir3/{sub1,sub2,sub3}}
mkdir -p /c/Estructura_A/{dir1/{sub1,sub2,sub3},dir2/{sub1,sub2,sub3},dir3/{sub1,sub2,sub3}}
nano Punto_A.sh
chmod +x Punto_A.sh
./Punto_A.sh
ls -R /c/Estructura_A
git add Punto_A.sh
ls
cd Recu_TP_AySO
git status
mv ~/Punto_A.sh ~/Recu_TP_AySO/
cd ~/Recu_TP_AySO
git add Punto_A.sh
git commit -m "ADD: Punto A - estructura simétrica"
git push
set -euo pipefail
sudo groupadd -f p1c1_2024_g1
set -euo pipefail
sudo groupadd -f p1c1_2024_g1
mkdir -p /c/TP_B/datos
cd Recu_TP_AySo
mkdir -p /c/TP_B/usuarios/p1c1_2024_u1
mkdir -p /c/TP_B/grupos/p1c1_2024_g1
echo "p1c1_2024_u1" > /c/TP_B/datos/validar1.txt
mkdir -p /c/TP_C/datos
mkdir -p /c/TP_C/usuarios/p1c1_2024_u2
mkdir -p /c/TP_C/grupos/p1c1_2024_Todos
echo "p1c1_2024_u2 : id=2024(g1)" >> /c/TP_C/datos/validar1.txt
mkdir -p ~/Ejercicio_D/{rx,tx}
for d in rx tx; do
for d in rx tx; do   for i in $(seq 1 20); do     mkdir -p ~/Ejercicio_D/$d/lotes_$i;   done; 
for d in rx tx; do   for i in $(seq 1 20); do     mkdir -p ~/Ejercicio_D/$d/lotes_$i;   done; done
for i in $(seq 1 100); do   mkdir -p ~/Ejercicio_D/rx/extras_$i; done
mkdir -p ~/Punto_E
echo "MemTotal: 16384 kB" > ~/Punto_E/Filtro_basico.txt
echo "CPU Model: Intel(R) Core(TM) i7" >> ~/Punto_E/Filtro_basico.txt
echo "Frequency (MHz): 2600" >> ~/Punto_E/Filtro_basico.txt
mkdir -p ~/Punto_F
mkdir -p ~/Punto_F
OUT=~/Punto_F/Filtro_Avanzado.txt
HOST=$(hostname)
USER=$(whoami)
FECHA=$(date '+%Y-%m-%d %H:%M:%S')
IP_PUBLICA=$(curl -s ifconfig.me || echo "N/A")
cat > "$OUT" <<EOF
Fecha/Hora : $FECHA
Usuario    : $USER
Hostname   : $HOST
IP Pública : $IP_PUBLICA
EOF

history -a
cp ~/.bash_history ./Historial_comandos_.txt
